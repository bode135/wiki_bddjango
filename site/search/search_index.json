{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"bddjango   \u6253\u5305 drf + simpleui \u73af\u5883 \u4e0b \u7684 \u5e38\u7528 \u5f00\u53d1 \u5de5\u5177 \u5f00\u53d1\u5de5\u5177 ,   \u7b80\u5316 \u5f00\u53d1 \u6d41\u7a0b .   \u5b89\u88c5   pip   install   bddjango   \u5feb\u901f \u5f00\u59cb   \u8fd9\u91cc \u5f00\u53d1 \u4e00\u4e2a \u57fa\u672c \u7684 api \u63a5\u53e3 \u4f5c\u4e3a \u793a\u4f8b   QuickStart . md   \u529f\u80fd   View \u7c7b   \u77ed\u77ed \u51e0\u884c \u4ee3\u7801 \u5c31 \u80fd \u5b9e\u73b0 \u4ee5\u4e0b \u6240\u6709 \u529f\u80fd   \u5217\u8868 \u9875 \u548c \u8be6\u60c5 \u8be6\u60c5\u9875 \u901a\u7528   BaseListView   \u8fc7\u6ee4   \u6392\u5e8f   \u5206\u9875   \u8be6\u60c5 \u8be6\u60c5\u9875   \u9ad8\u7ea7 \u68c0\u7d22   AdvancedSearchView   Admin \u7c7b   \u4e3b\u8981 \u57fa\u4e8e   simple - ui   \u8fdb\u884c \u4e8c\u6b21 \u5f00\u53d1 \u4e8c\u6b21\u5f00\u53d1   \u4fee\u590d \u4e86 \u90e8\u5206 BUG   change _ list   \u9875\u9762 \u90e8\u5206 \u6570\u636e \u663e\u793a \u9519\u8bef   \u6570\u636e \u5bfc\u5165 \u5bfc\u51fa \u754c\u9762 \u4f18\u5316   actions   \u6309\u94ae \u5f3a\u5236 \u8fd0\u884c   django - guardian   \u6309\u94ae \u7f8e\u89c2 \u4e0d\u7f8e\u89c2 \u95ee\u9898   \u5b9e\u73b0 \u9996\u9875 \u7f8e\u5316 \u3001 \u6253\u5f00 \u65b0 \u6807\u7b7e \u9875 \u3001 iframe \u7a97\u53e3 \u7b49 \u57fa\u672c \u529f\u80fd \u57fa\u672c\u529f \u57fa\u672c\u529f\u80fd   \u81ea\u52a8 \u751f\u6210 Wiki   \u6ce8\u610f \u9700\u6ce8\u610f \u4ee3\u7801 \u98ce\u683c   \u7528\u4e8e \u7b80\u5316 \u6587\u6863 \u64b0\u5199 \u6d41\u7a0b   \u4ed3\u5e93 \u5730\u5740   bddjango \u7684 Git \u9996\u9875","title":"Home"},{"location":"#bddjango","text":"\u6253\u5305 drf + simpleui \u73af\u5883 \u4e0b \u7684 \u5e38\u7528 \u5f00\u53d1 \u5de5\u5177 \u5f00\u53d1\u5de5\u5177 ,   \u7b80\u5316 \u5f00\u53d1 \u6d41\u7a0b .","title":"bddjango"},{"location":"#_1","text":"pip   install   bddjango","title":"\u5b89\u88c5"},{"location":"#_2","text":"\u8fd9\u91cc \u5f00\u53d1 \u4e00\u4e2a \u57fa\u672c \u7684 api \u63a5\u53e3 \u4f5c\u4e3a \u793a\u4f8b   QuickStart . md","title":"\u5feb\u901f \u5f00\u59cb"},{"location":"#_3","text":"","title":"\u529f\u80fd"},{"location":"#view","text":"\u77ed\u77ed \u51e0\u884c \u4ee3\u7801 \u5c31 \u80fd \u5b9e\u73b0 \u4ee5\u4e0b \u6240\u6709 \u529f\u80fd   \u5217\u8868 \u9875 \u548c \u8be6\u60c5 \u8be6\u60c5\u9875 \u901a\u7528   BaseListView   \u8fc7\u6ee4   \u6392\u5e8f   \u5206\u9875   \u8be6\u60c5 \u8be6\u60c5\u9875   \u9ad8\u7ea7 \u68c0\u7d22   AdvancedSearchView","title":"View \u7c7b"},{"location":"#admin","text":"\u4e3b\u8981 \u57fa\u4e8e   simple - ui   \u8fdb\u884c \u4e8c\u6b21 \u5f00\u53d1 \u4e8c\u6b21\u5f00\u53d1   \u4fee\u590d \u4e86 \u90e8\u5206 BUG   change _ list   \u9875\u9762 \u90e8\u5206 \u6570\u636e \u663e\u793a \u9519\u8bef   \u6570\u636e \u5bfc\u5165 \u5bfc\u51fa \u754c\u9762 \u4f18\u5316   actions   \u6309\u94ae \u5f3a\u5236 \u8fd0\u884c   django - guardian   \u6309\u94ae \u7f8e\u89c2 \u4e0d\u7f8e\u89c2 \u95ee\u9898   \u5b9e\u73b0 \u9996\u9875 \u7f8e\u5316 \u3001 \u6253\u5f00 \u65b0 \u6807\u7b7e \u9875 \u3001 iframe \u7a97\u53e3 \u7b49 \u57fa\u672c \u529f\u80fd \u57fa\u672c\u529f \u57fa\u672c\u529f\u80fd","title":"Admin \u7c7b"},{"location":"#wiki","text":"\u6ce8\u610f \u9700\u6ce8\u610f \u4ee3\u7801 \u98ce\u683c   \u7528\u4e8e \u7b80\u5316 \u6587\u6863 \u64b0\u5199 \u6d41\u7a0b","title":"\u81ea\u52a8 \u751f\u6210 Wiki"},{"location":"#_4","text":"bddjango \u7684 Git \u9996\u9875","title":"\u4ed3\u5e93 \u5730\u5740"},{"location":"FormatDescription/","text":"API \u6587\u6863 \u683c\u5f0f \u8bf4\u660e   \u7ea6\u5b9a API \u7684 \u4e00\u822c \u683c\u5f0f ,   \u4fbf\u4e8e \u7b80\u5316 \u6587\u6863 \u3001 \u7edf\u4e00 API \u98ce\u683c .   \u4f7f \u8fd4\u56de \u7684 \u5b57 \u6bb5 \u90fd \u80fd \u7528\u6765 \u8fdb\u884c   \u57fa\u672c \u68c0\u7d22   \u548c   \u9ad8\u7ea7 \u68c0\u7d22   .   \u8bf7\u6c42 \u65b9\u5f0f   \u4e3b\u8981 \u4e3a   \u589e\u5220 \u67e5 \u6539\u7c7b   \u548c   \u57fa\u672c \u67e5\u627e \u7c7b   ,   \u524d\u8005 \u652f\u6301 \u6240\u6709 \u589e\u5220 \u67e5\u6539 \u64cd\u4f5c ,   \u540e\u8005 \u4ec5 \u652f\u6301 \u5217\u8868 \u9875 \u548c \u8be6\u60c5 \u8be6\u60c5\u9875 \u67e5\u8868 \u64cd\u4f5c ;   \u9ad8\u7ea7 \u68c0\u7d22 \u7c7b   \u5219 \u7528\u6765 \u5bf9 \u6570\u636e \u8fdb\u884c \u9ad8\u7ea7 \u68c0\u7d22 .   \u8bf7\u6c42 \u7c7b\u578b \u8bf4\u660e   \u7c7b\u578b   \u8bf4\u660e   \u57fa\u672c \u67e5\u627e \u7c7b   \u83b7\u53d6 \u5217\u8868 \u9875 \u548c \u8be6\u60c5 \u8be6\u60c5\u9875 ,   \u5176\u4e2d \u5217\u8868 \u9875 \u53ef\u7528 \u8fd4\u56de \u7684 \u5b57 \u6bb5 \u8fdb\u884c \u7cbe\u786e \u67e5\u627e   \u589e\u5220 \u67e5 \u6539\u7c7b   \u7ee7\u627f \u4e86 \u57fa\u672c \u67e5\u627e \u7c7b ,   \u4e14 \u652f\u6301 \u5168\u90e8 \u64cd\u4f5c ( \u589e\u5220 \u67e5\u6539 ) ,   \u4ee5\u53ca \u6279\u91cf \u5220\u9664 \u548c \u66f4\u65b0   \u9ad8\u7ea7 \u68c0\u7d22 \u7c7b   \u7ee7\u627f \u4e86 \u57fa\u672c \u67e5\u627e \u7c7b ,   \u4e14 \u652f\u6301 POST \u9ad8\u7ea7 \u68c0\u7d22   \u5176\u5b83 \u7c7b   \u5355\u4e00 \u7684 GET ,   POST ,   \u5177\u4f53 \u4f7f\u7528 \u65b9\u6cd5 \u5c06 \u989d\u5916 \u5907\u6ce8   \u8bf7\u6c42 \u793a\u4f8b   \u57fa\u672c \u67e5\u627e \u7c7b   \u4e3b\u8981 \u7528\u6765 \u67e5\u627e \u6570\u636e   ,   \u5982   \u5217\u8868 \u9875   \u548c   \u8be6\u60c5 \u8be6\u60c5\u9875   #   ---   \u67e5   GET   / api / search / BookTable / 17985 /   #   \u8be6\u60c5 \u8be6\u60c5\u9875   GET   / api / search / BookTable / ? p = 1 & page _ size = 10 & order _ type _ ls = - id   #   \u5217\u8868 \u9875 ,   \u6309 id \u5012\u5e8f \u8fd4\u56de   GET   / api / search / BookTable / ? title = \u515a\u53f2 & author _ code = 20306 /   #   \u5217\u8868 \u9875 ,   \u4e00\u822c \u6765\u8bf4 \u4e00\u822c\u6765\u8bf4 ,   \u53ef\u7528 \u6240\u6709 \u8fd4\u56de \u7684 \u5b57 \u6bb5 \u8fdb\u884c \u7cbe\u786e \u67e5\u627e   #   ---   \u6279\u91cf \u67e5\u627e ( \u6839\u636e id _ ls )   POST   / api / user / Group /   data   =   {   \" post _ type \" :   \" bulk _ list \" ,   \" id _ ls \" :   [ 27 ,   28 ] ,   }   \u589e\u5220 \u6539\u67e5 \u7c7b   \u7ee7\u627f \u4e86 \u57fa\u672c \u67e5\u627e \u7c7b   \u57fa\u672c \u4f7f\u7528 \u65b9\u6cd5 :   GET \u67e5 ,   POST \u589e ,   PUT \u6539 ,   DELETE \u5220 .   \u4e5f \u53ef\u4ee5 \u4f7f\u7528   post _ type   \u6307\u5b9a \u64cd\u4f5c \u7c7b\u578b ,   \u5176\u4e2d   post _ type _ ls   =   [ \" list \" ,   \" retrieve \" ,   \" create \" ,   \" update \" ,   \" delete \" ,   \" bulk _ delete \" ,   \" bulk _ update \" ,   \" bulk _ list \" ]   #   ---   \u589e   POST   / api / search / BookTable /   #   ---   \u6539   PUT   / api / search / BookTable / 17985 /   #   ---   \u5220   DELETE   / api / search / BookTable / 17985 /   #   ---   \u6279\u91cf \u5220\u9664 / \u66f4\u65b0   POST   / api / user / Group /   data   =   {   \" post _ type \" :   \" bulk _ update \" ,   #   bulk _ update \u6216 bulk _ delete   \" id _ ls \" :   [ 27 ,   28 ] ,   #   \u5982\u679c \u662f bulk _ update ,   \u5219 \u9700\u8981 \u6307\u5b9a \u8981 \u66f4\u65b0 \u7684 \u5b57 \u6bb5 \u548c \u503c   \" field _ dc \" :   {   \" more _ group __ active \" :   1 ,   \" more _ group __ explain \" :   \" asdfdas \"   }   }   \u9ad8\u7ea7 \u68c0\u7d22 \u7c7b   \u4f7f\u7528   Q _ add _ ls   \u53c2\u6570 \u8fdb\u884c \u9ad8\u7ea7 \u68c0\u7d22 ,   \u6700 \u591a \u652f\u6301 \u4e24\u5c42 \u68c0\u7d22 \u5f0f \u5d4c\u5957 .   #   \u68c0\u7d22 ` author _ code ` ( \u5b66\u8005 \u7f16\u7801 ) \u4e3a ` 29856 ` ,   \u4e14 \u6807\u9898 ` title ` \u4e2d \u5305\u542b \u5173\u952e \u5173\u952e\u8bcd ` \u53ef \u6301\u7eed ` ,   #   \u4e14 ` \u6587\u7ae0 \u51fa\u7248 \u65f6\u95f4 ` \u4e3a ` ( 2019 - 02 - 10 ,   2019 - 04 - 01 ] ` \u7684 \u6587\u7ae0   {   \" page _ size \" :   3 ,   #   \u8fd4\u56de \u6570\u91cf   \" distinct _ field _ ls \" :   [ \" title \" ] ,   #   \u53bb \u5b57\u6bb5 \u91cd\u5b57\u6bb5   \" order _ type _ ls \" :   [ \" title \" ,   \" id \" ] ,   #   \u6392\u5e8f \u5b57 \u6bb5   \" Q _ add _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" Q _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" author _ code \" ,   \" search _ keywords \" :   \" 29856 \" ,   \" accuracy \" :   \" 1 \"   } ,   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" title \" ,   \" search _ keywords \" :   \" \u53ef \u6301\u7eed \" ,   \" accuracy \" :   \" 0 \"   }   ]   } ,   {   \" add _ logic \" :   \" and \" ,   \" Q _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" published _ date \" ,   \" search _ keywords \" :   \" 2019 - 02 - 10 \" ,   \" accuracy \" :   \" gt \"   } ,   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" published _ date \" ,   \" search _ keywords \" :   \" 2019 - 04 - 01 \" ,   \" accuracy \" :   \" lte \"   }   ]   }   ]   }   \u8bf7\u6c42 \u53c2\u6570 \u8bf4\u660e   \u5217\u8868 \u9875 \u53c2\u6570   \u57fa\u672c \u67e5\u627e \u7c7b \u90fd \u4f1a \u643a\u5e26 \u9875\u9762 \u63a7\u5236 \u53c2\u6570 \u63a7\u5236\u53c2\u6570   \u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   \u662f\u5426 \u5fc5\u586b   int   p   \u9875\u7801   \u5426   int   page _ size   \u6bcf\u9875 \u6570\u91cf   \u5426   list   order _ type _ ls   \u6392\u5e8f \u5b57\u6bb5 \u5b57\u6bb5\u540d ,   \u5982   - id   \u4e3a \u5012\u5e8f \u6392\u5217 ,   __ None __   \u5219 \u4e3a \u76f8\u5173 \u76f8\u5173\u6027 \u6392\u5e8f   \u5426   list   distinct _ field _ ls   \u53bb \u91cd \u5b57\u6bb5 \u5b57\u6bb5\u540d ,   \u53c2\u8003   \u9ad8\u7ea7 \u68c0\u7d22 \u7c7b   \u7684 \u8bf7\u6c42 \u793a\u4f8b .   \u5426   \u8be6\u60c5 \u8be6\u60c5\u9875   \u6307\u5b9a \u4e3b\u952e \u540d ,   \u4e00\u822c \u4e3a   id   ,   \u680f\u76ee \u7528   code   .   \u6279\u91cf \u66f4\u65b0   or   \u6279\u91cf \u5220\u9664   \u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   str   post _ type   post \u8bf7\u6c42 \u7684 \u7c7b\u578b   list   id _ ls   id \u5217\u8868   dict   field _ dc   \u66f4\u65b0 \u5b57\u6bb5 \u7684 \u5b57\u5178 ,   \u5982   { ' active ' :   1 }   ,   \u82e5 \u4e3a   active   \u5b57\u6bb5 \u4e3a \u5916\u952e \u5219 \u9700\u8981 \u52a0\u4e0a \u8868\u540d   more _ group __ active   .   \u8fd4\u56de \u53c2\u6570 \u8bf4\u660e   \u4e00\u822c \u7684 \u5217\u8868 \u4fe1\u606f \u5c06 \u5b58\u653e \u4e8e   result   \u4e2d \u7684   data   \u4e2d   \u643a\u5e26 \u7684 \u57fa\u672c \u672c\u53c2 \u53c2\u6570 \u57fa\u672c\u53c2\u6570   \u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   int   status   200 , 201 \u6210\u529f ; 404 \u9519\u8bef   int   msg   \u4fe1\u606f   dict   result   \u8fd4\u56de \u7ed3\u679c   result   \u4e2d \u7684   page _ dc   \u9875\u7801 \u4fe1\u606f   \u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   int   count _ items   \u603b \u6761\u6570   int   total _ pages   \u603b \u9875\u6570   int   page _ size   \u6bcf\u9875 \u6761\u6570   int   p   \u5f53\u524d \u5f53\u524d\u9875   \u8fd4\u56de \u793a\u4f8b   #   \u5217\u8868 \u9875 ,   \u6ce8\u610f ` status ` \u548c ` result ` \u53ef\u80fd \u4f1a \u6709 \u53d8\u52a8 ,   \u4ee5 \u5b9e\u9645 \u60c5\u51b5 \u4e3a\u51c6 .   {   \" status \" :   200 ,   \" msg \" :   \" ok \" ,   \" result \" :   {   \" page _ dc \" :   {   \" count _ items \" :   4507 ,   \" total _ pages \" :   451 ,   \" page _ size \" :   10 ,   \" p \" :   1   } ,   \" data \" :   [   {   \" id \" :   17986 ,   \" title \" :   \" \u552f\u7269 \u7269\u8bba \u552f\u7269\u8bba \u4e0e \u7ecf\u9a8c \u6279\u8bc4 \u8bba \" ,   \" author _ name \" :   \" \u5217\u5b81 \u8457 \" ,   \" publication _ date \" :   null   } ,   ...   ]   }   }   \u5907\u6ce8   API \u683c\u5f0f \u8bf4\u660e \u6587\u6863   \u8fd4\u56de \u7684 \u5982\u679c \u662f   SerializerMethodField   \u7c7b\u578b \u6570\u636e ,   \u4e00\u822c \u4e0d\u80fd \u7528\u4e8e \u4f5c\u4e3a \u68c0\u7d22 \u53c2\u6570","title":"API \u6587\u6863 \u683c\u5f0f \u8bf4\u660e"},{"location":"FormatDescription/#api","text":"\u7ea6\u5b9a API \u7684 \u4e00\u822c \u683c\u5f0f ,   \u4fbf\u4e8e \u7b80\u5316 \u6587\u6863 \u3001 \u7edf\u4e00 API \u98ce\u683c .   \u4f7f \u8fd4\u56de \u7684 \u5b57 \u6bb5 \u90fd \u80fd \u7528\u6765 \u8fdb\u884c   \u57fa\u672c \u68c0\u7d22   \u548c   \u9ad8\u7ea7 \u68c0\u7d22   .","title":"API \u6587\u6863 \u683c\u5f0f \u8bf4\u660e"},{"location":"FormatDescription/#_1","text":"\u4e3b\u8981 \u4e3a   \u589e\u5220 \u67e5 \u6539\u7c7b   \u548c   \u57fa\u672c \u67e5\u627e \u7c7b   ,   \u524d\u8005 \u652f\u6301 \u6240\u6709 \u589e\u5220 \u67e5\u6539 \u64cd\u4f5c ,   \u540e\u8005 \u4ec5 \u652f\u6301 \u5217\u8868 \u9875 \u548c \u8be6\u60c5 \u8be6\u60c5\u9875 \u67e5\u8868 \u64cd\u4f5c ;   \u9ad8\u7ea7 \u68c0\u7d22 \u7c7b   \u5219 \u7528\u6765 \u5bf9 \u6570\u636e \u8fdb\u884c \u9ad8\u7ea7 \u68c0\u7d22 .   \u8bf7\u6c42 \u7c7b\u578b \u8bf4\u660e   \u7c7b\u578b   \u8bf4\u660e   \u57fa\u672c \u67e5\u627e \u7c7b   \u83b7\u53d6 \u5217\u8868 \u9875 \u548c \u8be6\u60c5 \u8be6\u60c5\u9875 ,   \u5176\u4e2d \u5217\u8868 \u9875 \u53ef\u7528 \u8fd4\u56de \u7684 \u5b57 \u6bb5 \u8fdb\u884c \u7cbe\u786e \u67e5\u627e   \u589e\u5220 \u67e5 \u6539\u7c7b   \u7ee7\u627f \u4e86 \u57fa\u672c \u67e5\u627e \u7c7b ,   \u4e14 \u652f\u6301 \u5168\u90e8 \u64cd\u4f5c ( \u589e\u5220 \u67e5\u6539 ) ,   \u4ee5\u53ca \u6279\u91cf \u5220\u9664 \u548c \u66f4\u65b0   \u9ad8\u7ea7 \u68c0\u7d22 \u7c7b   \u7ee7\u627f \u4e86 \u57fa\u672c \u67e5\u627e \u7c7b ,   \u4e14 \u652f\u6301 POST \u9ad8\u7ea7 \u68c0\u7d22   \u5176\u5b83 \u7c7b   \u5355\u4e00 \u7684 GET ,   POST ,   \u5177\u4f53 \u4f7f\u7528 \u65b9\u6cd5 \u5c06 \u989d\u5916 \u5907\u6ce8","title":"\u8bf7\u6c42 \u65b9\u5f0f"},{"location":"FormatDescription/#_2","text":"","title":"\u8bf7\u6c42 \u793a\u4f8b"},{"location":"FormatDescription/#_3","text":"\u4e3b\u8981 \u7528\u6765 \u67e5\u627e \u6570\u636e   ,   \u5982   \u5217\u8868 \u9875   \u548c   \u8be6\u60c5 \u8be6\u60c5\u9875   #   ---   \u67e5   GET   / api / search / BookTable / 17985 /   #   \u8be6\u60c5 \u8be6\u60c5\u9875   GET   / api / search / BookTable / ? p = 1 & page _ size = 10 & order _ type _ ls = - id   #   \u5217\u8868 \u9875 ,   \u6309 id \u5012\u5e8f \u8fd4\u56de   GET   / api / search / BookTable / ? title = \u515a\u53f2 & author _ code = 20306 /   #   \u5217\u8868 \u9875 ,   \u4e00\u822c \u6765\u8bf4 \u4e00\u822c\u6765\u8bf4 ,   \u53ef\u7528 \u6240\u6709 \u8fd4\u56de \u7684 \u5b57 \u6bb5 \u8fdb\u884c \u7cbe\u786e \u67e5\u627e   #   ---   \u6279\u91cf \u67e5\u627e ( \u6839\u636e id _ ls )   POST   / api / user / Group /   data   =   {   \" post _ type \" :   \" bulk _ list \" ,   \" id _ ls \" :   [ 27 ,   28 ] ,   }","title":"\u57fa\u672c \u67e5\u627e \u7c7b"},{"location":"FormatDescription/#_4","text":"\u7ee7\u627f \u4e86 \u57fa\u672c \u67e5\u627e \u7c7b   \u57fa\u672c \u4f7f\u7528 \u65b9\u6cd5 :   GET \u67e5 ,   POST \u589e ,   PUT \u6539 ,   DELETE \u5220 .   \u4e5f \u53ef\u4ee5 \u4f7f\u7528   post _ type   \u6307\u5b9a \u64cd\u4f5c \u7c7b\u578b ,   \u5176\u4e2d   post _ type _ ls   =   [ \" list \" ,   \" retrieve \" ,   \" create \" ,   \" update \" ,   \" delete \" ,   \" bulk _ delete \" ,   \" bulk _ update \" ,   \" bulk _ list \" ]   #   ---   \u589e   POST   / api / search / BookTable /   #   ---   \u6539   PUT   / api / search / BookTable / 17985 /   #   ---   \u5220   DELETE   / api / search / BookTable / 17985 /   #   ---   \u6279\u91cf \u5220\u9664 / \u66f4\u65b0   POST   / api / user / Group /   data   =   {   \" post _ type \" :   \" bulk _ update \" ,   #   bulk _ update \u6216 bulk _ delete   \" id _ ls \" :   [ 27 ,   28 ] ,   #   \u5982\u679c \u662f bulk _ update ,   \u5219 \u9700\u8981 \u6307\u5b9a \u8981 \u66f4\u65b0 \u7684 \u5b57 \u6bb5 \u548c \u503c   \" field _ dc \" :   {   \" more _ group __ active \" :   1 ,   \" more _ group __ explain \" :   \" asdfdas \"   }   }","title":"\u589e\u5220 \u6539\u67e5 \u7c7b"},{"location":"FormatDescription/#_5","text":"\u4f7f\u7528   Q _ add _ ls   \u53c2\u6570 \u8fdb\u884c \u9ad8\u7ea7 \u68c0\u7d22 ,   \u6700 \u591a \u652f\u6301 \u4e24\u5c42 \u68c0\u7d22 \u5f0f \u5d4c\u5957 .   #   \u68c0\u7d22 ` author _ code ` ( \u5b66\u8005 \u7f16\u7801 ) \u4e3a ` 29856 ` ,   \u4e14 \u6807\u9898 ` title ` \u4e2d \u5305\u542b \u5173\u952e \u5173\u952e\u8bcd ` \u53ef \u6301\u7eed ` ,   #   \u4e14 ` \u6587\u7ae0 \u51fa\u7248 \u65f6\u95f4 ` \u4e3a ` ( 2019 - 02 - 10 ,   2019 - 04 - 01 ] ` \u7684 \u6587\u7ae0   {   \" page _ size \" :   3 ,   #   \u8fd4\u56de \u6570\u91cf   \" distinct _ field _ ls \" :   [ \" title \" ] ,   #   \u53bb \u5b57\u6bb5 \u91cd\u5b57\u6bb5   \" order _ type _ ls \" :   [ \" title \" ,   \" id \" ] ,   #   \u6392\u5e8f \u5b57 \u6bb5   \" Q _ add _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" Q _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" author _ code \" ,   \" search _ keywords \" :   \" 29856 \" ,   \" accuracy \" :   \" 1 \"   } ,   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" title \" ,   \" search _ keywords \" :   \" \u53ef \u6301\u7eed \" ,   \" accuracy \" :   \" 0 \"   }   ]   } ,   {   \" add _ logic \" :   \" and \" ,   \" Q _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" published _ date \" ,   \" search _ keywords \" :   \" 2019 - 02 - 10 \" ,   \" accuracy \" :   \" gt \"   } ,   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" published _ date \" ,   \" search _ keywords \" :   \" 2019 - 04 - 01 \" ,   \" accuracy \" :   \" lte \"   }   ]   }   ]   }","title":"\u9ad8\u7ea7 \u68c0\u7d22 \u7c7b"},{"location":"FormatDescription/#_6","text":"\u5217\u8868 \u9875 \u53c2\u6570   \u57fa\u672c \u67e5\u627e \u7c7b \u90fd \u4f1a \u643a\u5e26 \u9875\u9762 \u63a7\u5236 \u53c2\u6570 \u63a7\u5236\u53c2\u6570   \u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   \u662f\u5426 \u5fc5\u586b   int   p   \u9875\u7801   \u5426   int   page _ size   \u6bcf\u9875 \u6570\u91cf   \u5426   list   order _ type _ ls   \u6392\u5e8f \u5b57\u6bb5 \u5b57\u6bb5\u540d ,   \u5982   - id   \u4e3a \u5012\u5e8f \u6392\u5217 ,   __ None __   \u5219 \u4e3a \u76f8\u5173 \u76f8\u5173\u6027 \u6392\u5e8f   \u5426   list   distinct _ field _ ls   \u53bb \u91cd \u5b57\u6bb5 \u5b57\u6bb5\u540d ,   \u53c2\u8003   \u9ad8\u7ea7 \u68c0\u7d22 \u7c7b   \u7684 \u8bf7\u6c42 \u793a\u4f8b .   \u5426   \u8be6\u60c5 \u8be6\u60c5\u9875   \u6307\u5b9a \u4e3b\u952e \u540d ,   \u4e00\u822c \u4e3a   id   ,   \u680f\u76ee \u7528   code   .   \u6279\u91cf \u66f4\u65b0   or   \u6279\u91cf \u5220\u9664   \u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   str   post _ type   post \u8bf7\u6c42 \u7684 \u7c7b\u578b   list   id _ ls   id \u5217\u8868   dict   field _ dc   \u66f4\u65b0 \u5b57\u6bb5 \u7684 \u5b57\u5178 ,   \u5982   { ' active ' :   1 }   ,   \u82e5 \u4e3a   active   \u5b57\u6bb5 \u4e3a \u5916\u952e \u5219 \u9700\u8981 \u52a0\u4e0a \u8868\u540d   more _ group __ active   .","title":"\u8bf7\u6c42 \u53c2\u6570 \u8bf4\u660e"},{"location":"FormatDescription/#_7","text":"\u4e00\u822c \u7684 \u5217\u8868 \u4fe1\u606f \u5c06 \u5b58\u653e \u4e8e   result   \u4e2d \u7684   data   \u4e2d   \u643a\u5e26 \u7684 \u57fa\u672c \u672c\u53c2 \u53c2\u6570 \u57fa\u672c\u53c2\u6570   \u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   int   status   200 , 201 \u6210\u529f ; 404 \u9519\u8bef   int   msg   \u4fe1\u606f   dict   result   \u8fd4\u56de \u7ed3\u679c   result   \u4e2d \u7684   page _ dc   \u9875\u7801 \u4fe1\u606f   \u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   int   count _ items   \u603b \u6761\u6570   int   total _ pages   \u603b \u9875\u6570   int   page _ size   \u6bcf\u9875 \u6761\u6570   int   p   \u5f53\u524d \u5f53\u524d\u9875","title":"\u8fd4\u56de \u53c2\u6570 \u8bf4\u660e"},{"location":"FormatDescription/#_8","text":"#   \u5217\u8868 \u9875 ,   \u6ce8\u610f ` status ` \u548c ` result ` \u53ef\u80fd \u4f1a \u6709 \u53d8\u52a8 ,   \u4ee5 \u5b9e\u9645 \u60c5\u51b5 \u4e3a\u51c6 .   {   \" status \" :   200 ,   \" msg \" :   \" ok \" ,   \" result \" :   {   \" page _ dc \" :   {   \" count _ items \" :   4507 ,   \" total _ pages \" :   451 ,   \" page _ size \" :   10 ,   \" p \" :   1   } ,   \" data \" :   [   {   \" id \" :   17986 ,   \" title \" :   \" \u552f\u7269 \u7269\u8bba \u552f\u7269\u8bba \u4e0e \u7ecf\u9a8c \u6279\u8bc4 \u8bba \" ,   \" author _ name \" :   \" \u5217\u5b81 \u8457 \" ,   \" publication _ date \" :   null   } ,   ...   ]   }   }","title":"\u8fd4\u56de \u793a\u4f8b"},{"location":"FormatDescription/#_9","text":"API \u683c\u5f0f \u8bf4\u660e \u6587\u6863   \u8fd4\u56de \u7684 \u5982\u679c \u662f   SerializerMethodField   \u7c7b\u578b \u6570\u636e ,   \u4e00\u822c \u4e0d\u80fd \u7528\u4e8e \u4f5c\u4e3a \u68c0\u7d22 \u53c2\u6570","title":"\u5907\u6ce8"},{"location":"QuickStart/","text":"QuickStart   \u5b89\u88c5   pip   install   bddjango   \u63a5\u53e3 \u7f16\u5199   \u4f7f\u7528   BaseListView   \u5199 \u4e00\u4e2a \u63a5\u53e3 \u4f5c\u4e3a \u6848\u4f8b ,   \u7528 \u5c11\u91cf \u4ee3\u7801 \u5b9e\u73b0 \u4e86 \u5217\u8868 \u9875 \u7684 \u7cbe\u786e \u8fc7\u6ee4 \u3001 \u6392\u5e8f \u3001 \u53bb \u91cd \u3001 \u5206\u9875 ,   \u4ee5\u53ca \u67e5\u770b \u8be6\u60c5 \u8be6\u60c5\u9875 \u7b49 \u57fa\u672c \u529f\u80fd \u57fa\u672c\u529f \u57fa\u672c\u529f\u80fd   \u5efa\u7acb \u6a21\u578b   \u9700\u8981 \u5148 \u5efa\u7acb django \u9879\u76ee \u548c \u4e00\u4e2a \u540d\u4e3a   authors   \u7684 app .   #   models . py   from   django . db   import   models   class   AuthorInfo ( models . Model ) :   #   \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u5b57 \u6bb5 \u5c3d\u91cf \u4e0d\u8981 \u653e \u6587\u4ef6 \u3001 \u56fe\u7247 \u7b49 \u7c7b\u578b ,   \u907f\u514d admin \u81ea\u52a8 \u5c55\u793a \u6240\u6709 \u5b57\u6bb5 \u65f6 \u51fa\u9519   author   =   models . TextField ( blank = True ,   null = True ,   verbose _ name = ' \u4f5c\u8005 \u59d3\u540d \u4f5c\u8005\u59d3\u540d ' )   province   =   models . TextField ( blank = True ,   null = True ,   verbose _ name = ' \u7701\u4efd ' )   num _ of _ thesis   =   models . IntegerField ( blank = True ,   null = True ,   default = 0 ,   verbose _ name = ' \u53d1\u6587 \u91cf ' )   class   Meta :   verbose _ name _ plural   =   verbose _ name   =   \" \u4f5c\u8005 \u4fe1\u606f \u8868 \"   ordering   =   ( ' - num _ of _ thesis ' ,   ' id ' )   \u6570\u636e \u7ba1\u7406 \u6570\u636e\u7ba1\u7406   \u5728   admin . py   \u4e2d \u5efa\u7acb \u4e00\u4e2a \u6570\u636e \u7ba1\u7406 \u6570\u636e\u7ba1\u7406 \u7c7b ,   \u7136\u540e \u521b\u5efa \u6216\u8005 \u53f3\u4e0a \u4e0a\u89d2 \u53f3\u4e0a\u89d2 \u5bfc\u5165 \u51e0\u4e2a \u793a\u4f8b \u6570\u636e \u5373\u53ef   #   admin . py   from   bddjango . adminclass   import   BaseAdmin   from   django . contrib   import   admin   from   .   import   models   @ admin . register ( models . AuthorInfo )   class   AuthorInfo ( BaseAdmin ) :   pass   \u6570\u636e \u5bfc\u5165 \u5bfc\u51fa \u6309\u94ae   \u5c06 \u81ea\u52a8 \u9002\u914d \u539f\u751f \u98ce\u683c \u548c   simpleui   \u98ce\u683c . ( \u5982\u4e0b \u56fe )   \u53ef\u7528 \u5148   \u5168\u90e8 \u5bfc\u51fa   \u540e ,   \u7528 excel \u586b\u5199 \u90e8\u5206 \u793a\u4f8b \u6570\u636e ,   \u7136\u540e \u518d   \u5bfc\u5165 \u6570\u636e   .   View \u7f16\u5199   \u6ce8\u610f   ViewClass   \u6ce8\u91ca \u7684 \u98ce\u683c ,   \u7528\u6765 \u81ea\u52a8 \u751f\u6210 wiki \u6587\u6863   #   views . py   from   .   import   models ,   serializers   from   bddjango   import   BaseListView   from   bddjango   import   CompleteModelView   #   from   bddjango . MultipleConditionSearch   import   AdvancedSearchView   #   \u7528 \u8fd9\u4e2a \u4ee3\u66ff BaseListView \u5373\u53ef \u8fdb\u884c \u9ad8\u7ea7 \u68c0\u7d22   class   AuthorInfo ( BaseListView ) :   \" \" \"   #   \u4f5c\u8005 \u68c0\u7d22 \u63a5\u53e3   -   \u7528\u6765 \u5bf9 \u4f5c\u8005 \u8fdb\u884c \u68c0\u7d22   -   \u4e5f \u53ef\u4ee5 \u67e5\u770b \u5b66\u8005 \u7684 \u7701\u4efd \u5206\u5e03   -   ` distinct _ field _ ls ` \u8bbe\u7f6e \u4e3a ` province `   -   ` only _ get _ one _ field ` \u8bbe\u7f6e \u4e3a ` 1 `   GET   / api / authors / AuthorInfo /   #   \u5217\u8868 \u9875   GET   / api / authors / AuthorInfo / 3 /   #   \u8be6\u60c5 \u8be6\u60c5\u9875   \" \" \"   queryset   =   models . AuthorInfo   filter _ fields   =   [ ' __ all __ ' ]   #   \u5f00\u542f \u6240\u6709 \u5b57\u6bb5 \u4e3a \u8fc7\u6ee4 \u5b57 \u6bb5   serializer _ class   =   serializers . AuthorInfo   #   \u4e5f \u53ef\u7528 retrieve _ serializer _ class \u548c list _ serializer _ class \u5206\u522b \u6307\u5b9a \u5217\u8868 \u9875 \u548c \u8be6\u60c5 \u8be6\u60c5\u9875 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668   #   auto _ generate _ serializer _ class   =   True   #   \u81ea\u52a8 \u751f\u6210 \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668 ,   \u53ef\u7528 base _ fields \u6307\u5b9a \u5177\u4f53 \u8fd4\u56de \u54ea\u4e9b \u5b57 \u6bb5   #   order _ type _ ls   =   [ ' num _ of _ thesis ' ,   ' id ' ]   #   \u6307\u5b9a \u9ed8\u8ba4 \u6392\u5e8f   #   distinct _ field _ ls   =   [ ' province ' ]   #   \u6307\u5b9a \u53bb \u5b57\u6bb5 \u91cd\u5b57\u6bb5   Serializers \u7f16\u5199   #   serializers . py   from   django . urls   import   path ,   re _ path   from   .   import   views   class   AuthorInfo ( serializers . ModelSerializer ) :   \" \" \"   \u4e0d \u5c5e\u4e8e \u6a21\u578b \u4e2d \u7684 \u5b57 \u6bb5 \u9700\u8981 \u5728 \u8fd9\u91cc \u505a \u6ce8\u91ca ,   \u4ee5 \u751f\u6210 wiki ( \u6ce8\u91ca \u98ce\u683c \u517c\u5bb9 \u539f\u7248 python \u98ce\u683c )   -   is _ HuNan :   \u662f\u5426 \u6e56\u5357 \u6e56\u5357\u7701 \u7684 \u4f5c\u5bb6   \" \" \"   is _ HuNan   =   serializers . SerializerMethodField ( )   def   get _ is _ HuNan ( self ,   obj ) :   k _ name   =   ' province '   ret   =   False   if   hasattr ( obj ,   k _ name ) :   value   =   getattr ( obj ,   k _ name )   if   value   = =   \" \u6e56\u5357 \" :   ret   =   True   return   ret   class   Meta :   model   =   models . AuthorInfo   fields   =   ' __ all __ '   \u8def\u7531 \u8bbe\u7f6e   #   urls . py   from   django . urls   import   path ,   re _ path   from   .   import   views   app _ name   =   \" authors \"   urlpatterns   =   [   #   \u8be6\u60c5 \u8be6\u60c5\u9875 \u548c \u5217\u8868 \u9875 \u7528 \u540c\u4e00 \u4e00\u4e2a \u540c\u4e00\u4e2a View \u6765 \u5904\u7406   re _ path ( r ' ^ AuthorInfo ( $ | / $ | / ( ? P < pk > \\ w + ) / $ ) ' ,   views . AuthorInfo . as _ view ( ) ) ,   ]   \u63a5\u53e3 \u6d4b\u8bd5   \u83b7\u53d6 \u6240\u6709 \u4f5c\u8005   \u524d\u7aef \u53ef \u6307\u5b9a \u9875\u7801 \u3001 \u6bcf\u9875 \u6761\u76ee \u3001 \u6392\u5e8f \u5b57 \u6bb5   #   \u68c0\u7d22 \u6240\u6709 \u4f5c\u8005 ,   \u8fd4\u56de \u7b2c\u4e00 \u4e00\u9875 \u7b2c\u4e00\u9875 ,   \u6bcf\u9875 10 \u4e2a ,   \u6309 ` num _ of _ thesis ` \u5b57 \u6bb5 \u5012\u5e8f \u6392\u5e8f   GET   { { url } } / authors / AuthorInfo / ? p = 1 & page _ size = 10 & order _ type _ ls = - num _ of _ thesis   \u83b7\u53d6 \u7701\u4efd   province = \u6e56\u5357 \u6e56\u5357\u7701   \u7684 \u4f5c\u8005   GET   { { url } } / authors / AuthorInfo / ? province = \u6e56\u5357 \u6e56\u5357\u7701   \u83b7\u53d6 \u53d1\u6587 \u91cf   num _ of _ thesis = 1   \u7684 \u4f5c\u8005   GET   { { url } } / authors / AuthorInfo / ? num _ of _ thesis = 1   \u83b7\u53d6   pk = 3   \u7684 \u4f5c\u8005 \u8be6\u60c5   GET   { { url } } / authors / AuthorInfo / 3 /   #   \u6ce8\u610f \u659c\u6760   \u5206\u6790 \u4f5c\u8005 \u5206\u5e03 \u5728 \u54ea\u4e9b \u7701\u4efd   \u6309 \u7701\u4efd \u5b57\u6bb5 \u53bb \u91cd ,   \u7136\u540e \u53ea \u8fd4\u56de \u6307\u5b9a \u7684 \u53bb \u5b57\u6bb5 \u91cd\u5b57\u6bb5 \u5373\u53ef .   GET   { { url } } / authors / AuthorInfo / ? distinct _ field _ ls = province & only _ get _ distinct _ field = 1   \u4f7f\u7528   AdvancedSearchView   \u53ef \u8fdb\u884c \u9ad8\u7ea7 \u68c0\u7d22   \u6839\u636e Django \u7684 Q \u51fd\u6570 \u6784\u9020 Post \u8bf7\u6c42 \u5373\u53ef .   \u68c0\u7d22 \u903b\u8f91 \u5c06 \u6309\u7167 \u79bb\u6563 \u6570\u5b66 \u79bb\u6563\u6570\u5b66   \u547d\u9898 \u903b\u8f91 \u547d\u9898\u903b\u8f91   \u7684 \u8fd0\u7b97 \u89c4\u5219 \u8fdb\u884c \u5408\u5e76 .   #   \u6ce8\u610f \u4ee3\u7801 \u98ce\u683c ( post \u8bf7\u6c42 \u540e \u7684 json \u683c\u5f0f \u6570\u636e ) ,   \u4ee5\u4fbf \u81ea\u52a8 \u751f\u6210 wiki   POST   { { url } } / authors / AuthorInfo /   #   \u9ad8\u7ea7 \u68c0\u7d22 \u793a\u4f8b   {   \" \u76ee\u7684 \" :   \" \u68c0\u7d22 [ province ] \u4e3a [ \u6e56\u5357   or   \u6e56\u5317 ] ,   \u4e14 [ num _ of _ thesis ] \u5927\u4e8e \u7b49\u4e8e [ 10 ] \u7684 \u4f5c\u8005 ,   \u5e76 \u6309 [ num _ of _ thesis ] \u5012\u5e8f \u6392\u5e8f \" ,   \" page _ size \" :   10 ,   \" p \" :   1 ,   \" order _ type _ ls \" :   [ \" - num _ of _ thesis \" ] ,   \" Q _ add _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" Q _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" province \" ,   \" search _ keywords \" :   \" \u6e56\u5357 \" ,   \" accuracy \" :   \" 1 \"   } ,   {   \" add _ logic \" :   \" or \" ,   \" search _ field \" :   \" province \" ,   \" search _ keywords \" :   \" \u6e56\u5317 \" ,   \" accuracy \" :   \" 1 \"   }   ]   } ,   {   \" add _ logic \" :   \" and \" ,   \" Q _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" num _ of _ thesis \" ,   \" search _ keywords \" :   \" 10 \" ,   \" accuracy \" :   \" gte \"   }   ]   }   ]   }   \u751f\u6210 Wiki \u6587\u6863   \u81ea\u52a8 \u751f\u6210 wiki \u6587\u6863 ,   \u7b80\u5316 \u6587\u6863 \u64b0\u5199 \u64cd\u4f5c .   \u914d\u7f6e   urls . py   \u653e\u5230 \u4efb\u610f \u4e00\u4e2a   urls   \u4e2d \u5373\u53ef ,   \u6574\u4e2a \u9879\u76ee \u90fd \u901a\u7528 .   #   urls . py   ...   from   bddjango . autoWiki   import   AutoWiki   #   \u53ef\u7528 path _ of _ jinja2 _ template \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 wiki \u6587\u6863 \u98ce\u683c   urlpatterns   =   [   re _ path ( r ' ^ AutoWiki ( $ | / $ | / ( ? P < pk > \\ w + ) / $ ) ' ,   cache _ page ( 1 ) ( AutoWiki . as _ view ( ) ) ,   name = ' AutoWiki ' ) ,   ... ,   ]   \u8c03\u7528 \u63a5\u53e3   / api / authors / AutoWiki / ? app _ name = authors & view _ class _ name = AuthorInfo   \u53c2\u6570 \u8bf4\u660e   \u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   \u662f\u5426 \u5fc5\u586b   str   app _ name   \u6307\u5b9a app \u540d   \u662f   str   view _ class _ name   \u6307\u5b9a \u8981 \u751f\u6210 \u6587\u6863 \u7684 \u63a5\u53e3 View \u540d   \u5426 ,   \u9ed8\u8ba4 \u751f\u6210 \u6307\u5b9a app \u4e0b \u7684 \u5168\u90e8 view \u6587\u6863   int   get _ output _ file   \u662f\u5426 \u76f4\u63a5 \u4e0b\u8f7d wiki \u6587\u4ef6 .   \u9700\u8981 \u548c view _ class _ name \u540c\u65f6 \u6307\u5b9a ,   \u4e14 \u5efa\u8bae win ,   mac \u5e73\u53f0 \u9009 0 ,   linux \u9009 1 .   \u5426   \u8fd4\u56de \u793a\u4f8b   \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 \u98ce\u683c   BaseListView   \u7ee7\u627f \u4e86   [ ListModelMixin ,   RetrieveModelMixin ,   GenericAPIView ]   \u7c7b ,   \u6240\u4ee5 \u53ef\u7528 \u7c7b\u4f3c \u65b9\u6cd5 \u6765\u81ea \u5b9a\u4e49 \u63a5\u53e3 \u98ce\u683c .   \u8fd9\u91cc \u4f7f\u7528   conf . py   \u6765 \u8bb0\u5f55 \u914d\u7f6e \u597d \u7684 \u9879\u76ee \u63a5\u53e3 \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 \u98ce\u683c \u7c7b .   #   conf . py   from   bddjango   import   Pagination ,   JSONRenderer   #   \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 \u9ed8\u8ba4 \u5206\u9875 \u5668 \u548c \u8fd4\u56de \u683c\u5f0f   class   MyPagination ( Pagination ) :   page _ size   =   30   page _ size _ query _ param   =   ' page _ size '   page _ query _ param   =   ' p '   class   CodeMsgResultJsonRenderer ( JSONRenderer ) :   \" \" \"   \u4fdd\u8bc1 \u9879\u76ee \u4ee3\u7801 \u98ce\u683c ,   \u7edf\u4e00 \u8fd4\u56de \u6570\u636e \u7684 \u683c\u5f0f   \" \" \"   def   render ( self ,   data ,   accepted _ media _ type = None ,   renderer _ context = None ) :   assert   ' status '   in   data   and   ' result '   in   data ,   f ' \u9519\u8bef !   { str ( data ) } '   data [ ' code ' ]   =   data . pop ( ' status ' )   data [ ' data ' ]   =   data . pop ( ' result ' )   ret   =   super ( ) . render ( data ,   accepted _ media _ type ,   renderer _ context )   return   ret   class   MyBaseListView ( BaseListView ) :   pagination _ class   =   MyPagination   renderer _ classes   =   [ CodeMsgResultJsonRenderer ]   auto _ generate _ serializer _ class   =   True   filter _ fields   =   [ ' __ all __ ' ]   class   MyAdvancedSearchView ( AdvancedSearchView ) :   pagination _ class   =   MyPagination   renderer _ classes   =   [ CodeMsgResultJsonRenderer ]   auto _ generate _ serializer _ class   =   True   filter _ fields   =   [ ' __ all __ ' ]","title":"QuickStart"},{"location":"QuickStart/#quickstart","text":"","title":"QuickStart"},{"location":"QuickStart/#_1","text":"pip   install   bddjango","title":"\u5b89\u88c5"},{"location":"QuickStart/#_2","text":"\u4f7f\u7528   BaseListView   \u5199 \u4e00\u4e2a \u63a5\u53e3 \u4f5c\u4e3a \u6848\u4f8b ,   \u7528 \u5c11\u91cf \u4ee3\u7801 \u5b9e\u73b0 \u4e86 \u5217\u8868 \u9875 \u7684 \u7cbe\u786e \u8fc7\u6ee4 \u3001 \u6392\u5e8f \u3001 \u53bb \u91cd \u3001 \u5206\u9875 ,   \u4ee5\u53ca \u67e5\u770b \u8be6\u60c5 \u8be6\u60c5\u9875 \u7b49 \u57fa\u672c \u529f\u80fd \u57fa\u672c\u529f \u57fa\u672c\u529f\u80fd","title":"\u63a5\u53e3 \u7f16\u5199"},{"location":"QuickStart/#_3","text":"\u9700\u8981 \u5148 \u5efa\u7acb django \u9879\u76ee \u548c \u4e00\u4e2a \u540d\u4e3a   authors   \u7684 app .   #   models . py   from   django . db   import   models   class   AuthorInfo ( models . Model ) :   #   \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u5b57 \u6bb5 \u5c3d\u91cf \u4e0d\u8981 \u653e \u6587\u4ef6 \u3001 \u56fe\u7247 \u7b49 \u7c7b\u578b ,   \u907f\u514d admin \u81ea\u52a8 \u5c55\u793a \u6240\u6709 \u5b57\u6bb5 \u65f6 \u51fa\u9519   author   =   models . TextField ( blank = True ,   null = True ,   verbose _ name = ' \u4f5c\u8005 \u59d3\u540d \u4f5c\u8005\u59d3\u540d ' )   province   =   models . TextField ( blank = True ,   null = True ,   verbose _ name = ' \u7701\u4efd ' )   num _ of _ thesis   =   models . IntegerField ( blank = True ,   null = True ,   default = 0 ,   verbose _ name = ' \u53d1\u6587 \u91cf ' )   class   Meta :   verbose _ name _ plural   =   verbose _ name   =   \" \u4f5c\u8005 \u4fe1\u606f \u8868 \"   ordering   =   ( ' - num _ of _ thesis ' ,   ' id ' )","title":"\u5efa\u7acb \u6a21\u578b"},{"location":"QuickStart/#_4","text":"\u5728   admin . py   \u4e2d \u5efa\u7acb \u4e00\u4e2a \u6570\u636e \u7ba1\u7406 \u6570\u636e\u7ba1\u7406 \u7c7b ,   \u7136\u540e \u521b\u5efa \u6216\u8005 \u53f3\u4e0a \u4e0a\u89d2 \u53f3\u4e0a\u89d2 \u5bfc\u5165 \u51e0\u4e2a \u793a\u4f8b \u6570\u636e \u5373\u53ef   #   admin . py   from   bddjango . adminclass   import   BaseAdmin   from   django . contrib   import   admin   from   .   import   models   @ admin . register ( models . AuthorInfo )   class   AuthorInfo ( BaseAdmin ) :   pass   \u6570\u636e \u5bfc\u5165 \u5bfc\u51fa \u6309\u94ae   \u5c06 \u81ea\u52a8 \u9002\u914d \u539f\u751f \u98ce\u683c \u548c   simpleui   \u98ce\u683c . ( \u5982\u4e0b \u56fe )   \u53ef\u7528 \u5148   \u5168\u90e8 \u5bfc\u51fa   \u540e ,   \u7528 excel \u586b\u5199 \u90e8\u5206 \u793a\u4f8b \u6570\u636e ,   \u7136\u540e \u518d   \u5bfc\u5165 \u6570\u636e   .","title":"\u6570\u636e\u7ba1\u7406"},{"location":"QuickStart/#view","text":"\u6ce8\u610f   ViewClass   \u6ce8\u91ca \u7684 \u98ce\u683c ,   \u7528\u6765 \u81ea\u52a8 \u751f\u6210 wiki \u6587\u6863   #   views . py   from   .   import   models ,   serializers   from   bddjango   import   BaseListView   from   bddjango   import   CompleteModelView   #   from   bddjango . MultipleConditionSearch   import   AdvancedSearchView   #   \u7528 \u8fd9\u4e2a \u4ee3\u66ff BaseListView \u5373\u53ef \u8fdb\u884c \u9ad8\u7ea7 \u68c0\u7d22   class   AuthorInfo ( BaseListView ) :   \" \" \"   #   \u4f5c\u8005 \u68c0\u7d22 \u63a5\u53e3   -   \u7528\u6765 \u5bf9 \u4f5c\u8005 \u8fdb\u884c \u68c0\u7d22   -   \u4e5f \u53ef\u4ee5 \u67e5\u770b \u5b66\u8005 \u7684 \u7701\u4efd \u5206\u5e03   -   ` distinct _ field _ ls ` \u8bbe\u7f6e \u4e3a ` province `   -   ` only _ get _ one _ field ` \u8bbe\u7f6e \u4e3a ` 1 `   GET   / api / authors / AuthorInfo /   #   \u5217\u8868 \u9875   GET   / api / authors / AuthorInfo / 3 /   #   \u8be6\u60c5 \u8be6\u60c5\u9875   \" \" \"   queryset   =   models . AuthorInfo   filter _ fields   =   [ ' __ all __ ' ]   #   \u5f00\u542f \u6240\u6709 \u5b57\u6bb5 \u4e3a \u8fc7\u6ee4 \u5b57 \u6bb5   serializer _ class   =   serializers . AuthorInfo   #   \u4e5f \u53ef\u7528 retrieve _ serializer _ class \u548c list _ serializer _ class \u5206\u522b \u6307\u5b9a \u5217\u8868 \u9875 \u548c \u8be6\u60c5 \u8be6\u60c5\u9875 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668   #   auto _ generate _ serializer _ class   =   True   #   \u81ea\u52a8 \u751f\u6210 \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668 ,   \u53ef\u7528 base _ fields \u6307\u5b9a \u5177\u4f53 \u8fd4\u56de \u54ea\u4e9b \u5b57 \u6bb5   #   order _ type _ ls   =   [ ' num _ of _ thesis ' ,   ' id ' ]   #   \u6307\u5b9a \u9ed8\u8ba4 \u6392\u5e8f   #   distinct _ field _ ls   =   [ ' province ' ]   #   \u6307\u5b9a \u53bb \u5b57\u6bb5 \u91cd\u5b57\u6bb5","title":"View \u7f16\u5199"},{"location":"QuickStart/#serializers","text":"#   serializers . py   from   django . urls   import   path ,   re _ path   from   .   import   views   class   AuthorInfo ( serializers . ModelSerializer ) :   \" \" \"   \u4e0d \u5c5e\u4e8e \u6a21\u578b \u4e2d \u7684 \u5b57 \u6bb5 \u9700\u8981 \u5728 \u8fd9\u91cc \u505a \u6ce8\u91ca ,   \u4ee5 \u751f\u6210 wiki ( \u6ce8\u91ca \u98ce\u683c \u517c\u5bb9 \u539f\u7248 python \u98ce\u683c )   -   is _ HuNan :   \u662f\u5426 \u6e56\u5357 \u6e56\u5357\u7701 \u7684 \u4f5c\u5bb6   \" \" \"   is _ HuNan   =   serializers . SerializerMethodField ( )   def   get _ is _ HuNan ( self ,   obj ) :   k _ name   =   ' province '   ret   =   False   if   hasattr ( obj ,   k _ name ) :   value   =   getattr ( obj ,   k _ name )   if   value   = =   \" \u6e56\u5357 \" :   ret   =   True   return   ret   class   Meta :   model   =   models . AuthorInfo   fields   =   ' __ all __ '","title":"Serializers \u7f16\u5199"},{"location":"QuickStart/#_5","text":"#   urls . py   from   django . urls   import   path ,   re _ path   from   .   import   views   app _ name   =   \" authors \"   urlpatterns   =   [   #   \u8be6\u60c5 \u8be6\u60c5\u9875 \u548c \u5217\u8868 \u9875 \u7528 \u540c\u4e00 \u4e00\u4e2a \u540c\u4e00\u4e2a View \u6765 \u5904\u7406   re _ path ( r ' ^ AuthorInfo ( $ | / $ | / ( ? P < pk > \\ w + ) / $ ) ' ,   views . AuthorInfo . as _ view ( ) ) ,   ]","title":"\u8def\u7531 \u8bbe\u7f6e"},{"location":"QuickStart/#_6","text":"\u83b7\u53d6 \u6240\u6709 \u4f5c\u8005   \u524d\u7aef \u53ef \u6307\u5b9a \u9875\u7801 \u3001 \u6bcf\u9875 \u6761\u76ee \u3001 \u6392\u5e8f \u5b57 \u6bb5   #   \u68c0\u7d22 \u6240\u6709 \u4f5c\u8005 ,   \u8fd4\u56de \u7b2c\u4e00 \u4e00\u9875 \u7b2c\u4e00\u9875 ,   \u6bcf\u9875 10 \u4e2a ,   \u6309 ` num _ of _ thesis ` \u5b57 \u6bb5 \u5012\u5e8f \u6392\u5e8f   GET   { { url } } / authors / AuthorInfo / ? p = 1 & page _ size = 10 & order _ type _ ls = - num _ of _ thesis   \u83b7\u53d6 \u7701\u4efd   province = \u6e56\u5357 \u6e56\u5357\u7701   \u7684 \u4f5c\u8005   GET   { { url } } / authors / AuthorInfo / ? province = \u6e56\u5357 \u6e56\u5357\u7701   \u83b7\u53d6 \u53d1\u6587 \u91cf   num _ of _ thesis = 1   \u7684 \u4f5c\u8005   GET   { { url } } / authors / AuthorInfo / ? num _ of _ thesis = 1   \u83b7\u53d6   pk = 3   \u7684 \u4f5c\u8005 \u8be6\u60c5   GET   { { url } } / authors / AuthorInfo / 3 /   #   \u6ce8\u610f \u659c\u6760   \u5206\u6790 \u4f5c\u8005 \u5206\u5e03 \u5728 \u54ea\u4e9b \u7701\u4efd   \u6309 \u7701\u4efd \u5b57\u6bb5 \u53bb \u91cd ,   \u7136\u540e \u53ea \u8fd4\u56de \u6307\u5b9a \u7684 \u53bb \u5b57\u6bb5 \u91cd\u5b57\u6bb5 \u5373\u53ef .   GET   { { url } } / authors / AuthorInfo / ? distinct _ field _ ls = province & only _ get _ distinct _ field = 1   \u4f7f\u7528   AdvancedSearchView   \u53ef \u8fdb\u884c \u9ad8\u7ea7 \u68c0\u7d22   \u6839\u636e Django \u7684 Q \u51fd\u6570 \u6784\u9020 Post \u8bf7\u6c42 \u5373\u53ef .   \u68c0\u7d22 \u903b\u8f91 \u5c06 \u6309\u7167 \u79bb\u6563 \u6570\u5b66 \u79bb\u6563\u6570\u5b66   \u547d\u9898 \u903b\u8f91 \u547d\u9898\u903b\u8f91   \u7684 \u8fd0\u7b97 \u89c4\u5219 \u8fdb\u884c \u5408\u5e76 .   #   \u6ce8\u610f \u4ee3\u7801 \u98ce\u683c ( post \u8bf7\u6c42 \u540e \u7684 json \u683c\u5f0f \u6570\u636e ) ,   \u4ee5\u4fbf \u81ea\u52a8 \u751f\u6210 wiki   POST   { { url } } / authors / AuthorInfo /   #   \u9ad8\u7ea7 \u68c0\u7d22 \u793a\u4f8b   {   \" \u76ee\u7684 \" :   \" \u68c0\u7d22 [ province ] \u4e3a [ \u6e56\u5357   or   \u6e56\u5317 ] ,   \u4e14 [ num _ of _ thesis ] \u5927\u4e8e \u7b49\u4e8e [ 10 ] \u7684 \u4f5c\u8005 ,   \u5e76 \u6309 [ num _ of _ thesis ] \u5012\u5e8f \u6392\u5e8f \" ,   \" page _ size \" :   10 ,   \" p \" :   1 ,   \" order _ type _ ls \" :   [ \" - num _ of _ thesis \" ] ,   \" Q _ add _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" Q _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" province \" ,   \" search _ keywords \" :   \" \u6e56\u5357 \" ,   \" accuracy \" :   \" 1 \"   } ,   {   \" add _ logic \" :   \" or \" ,   \" search _ field \" :   \" province \" ,   \" search _ keywords \" :   \" \u6e56\u5317 \" ,   \" accuracy \" :   \" 1 \"   }   ]   } ,   {   \" add _ logic \" :   \" and \" ,   \" Q _ ls \" :   [   {   \" add _ logic \" :   \" and \" ,   \" search _ field \" :   \" num _ of _ thesis \" ,   \" search _ keywords \" :   \" 10 \" ,   \" accuracy \" :   \" gte \"   }   ]   }   ]   }","title":"\u63a5\u53e3 \u6d4b\u8bd5"},{"location":"QuickStart/#wiki","text":"\u81ea\u52a8 \u751f\u6210 wiki \u6587\u6863 ,   \u7b80\u5316 \u6587\u6863 \u64b0\u5199 \u64cd\u4f5c .","title":"\u751f\u6210 Wiki \u6587\u6863"},{"location":"QuickStart/#urlspy","text":"\u653e\u5230 \u4efb\u610f \u4e00\u4e2a   urls   \u4e2d \u5373\u53ef ,   \u6574\u4e2a \u9879\u76ee \u90fd \u901a\u7528 .   #   urls . py   ...   from   bddjango . autoWiki   import   AutoWiki   #   \u53ef\u7528 path _ of _ jinja2 _ template \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 wiki \u6587\u6863 \u98ce\u683c   urlpatterns   =   [   re _ path ( r ' ^ AutoWiki ( $ | / $ | / ( ? P < pk > \\ w + ) / $ ) ' ,   cache _ page ( 1 ) ( AutoWiki . as _ view ( ) ) ,   name = ' AutoWiki ' ) ,   ... ,   ]","title":"\u914d\u7f6e urls . py"},{"location":"QuickStart/#_7","text":"/ api / authors / AutoWiki / ? app _ name = authors & view _ class _ name = AuthorInfo","title":"\u8c03\u7528 \u63a5\u53e3"},{"location":"QuickStart/#_8","text":"\u7c7b\u578b   \u53c2\u6570 \u540d   \u8bf4\u660e   \u662f\u5426 \u5fc5\u586b   str   app _ name   \u6307\u5b9a app \u540d   \u662f   str   view _ class _ name   \u6307\u5b9a \u8981 \u751f\u6210 \u6587\u6863 \u7684 \u63a5\u53e3 View \u540d   \u5426 ,   \u9ed8\u8ba4 \u751f\u6210 \u6307\u5b9a app \u4e0b \u7684 \u5168\u90e8 view \u6587\u6863   int   get _ output _ file   \u662f\u5426 \u76f4\u63a5 \u4e0b\u8f7d wiki \u6587\u4ef6 .   \u9700\u8981 \u548c view _ class _ name \u540c\u65f6 \u6307\u5b9a ,   \u4e14 \u5efa\u8bae win ,   mac \u5e73\u53f0 \u9009 0 ,   linux \u9009 1 .   \u5426","title":"\u53c2\u6570 \u8bf4\u660e"},{"location":"QuickStart/#_9","text":"","title":"\u8fd4\u56de \u793a\u4f8b"},{"location":"QuickStart/#_10","text":"BaseListView   \u7ee7\u627f \u4e86   [ ListModelMixin ,   RetrieveModelMixin ,   GenericAPIView ]   \u7c7b ,   \u6240\u4ee5 \u53ef\u7528 \u7c7b\u4f3c \u65b9\u6cd5 \u6765\u81ea \u5b9a\u4e49 \u63a5\u53e3 \u98ce\u683c .   \u8fd9\u91cc \u4f7f\u7528   conf . py   \u6765 \u8bb0\u5f55 \u914d\u7f6e \u597d \u7684 \u9879\u76ee \u63a5\u53e3 \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 \u98ce\u683c \u7c7b .   #   conf . py   from   bddjango   import   Pagination ,   JSONRenderer   #   \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 \u9ed8\u8ba4 \u5206\u9875 \u5668 \u548c \u8fd4\u56de \u683c\u5f0f   class   MyPagination ( Pagination ) :   page _ size   =   30   page _ size _ query _ param   =   ' page _ size '   page _ query _ param   =   ' p '   class   CodeMsgResultJsonRenderer ( JSONRenderer ) :   \" \" \"   \u4fdd\u8bc1 \u9879\u76ee \u4ee3\u7801 \u98ce\u683c ,   \u7edf\u4e00 \u8fd4\u56de \u6570\u636e \u7684 \u683c\u5f0f   \" \" \"   def   render ( self ,   data ,   accepted _ media _ type = None ,   renderer _ context = None ) :   assert   ' status '   in   data   and   ' result '   in   data ,   f ' \u9519\u8bef !   { str ( data ) } '   data [ ' code ' ]   =   data . pop ( ' status ' )   data [ ' data ' ]   =   data . pop ( ' result ' )   ret   =   super ( ) . render ( data ,   accepted _ media _ type ,   renderer _ context )   return   ret   class   MyBaseListView ( BaseListView ) :   pagination _ class   =   MyPagination   renderer _ classes   =   [ CodeMsgResultJsonRenderer ]   auto _ generate _ serializer _ class   =   True   filter _ fields   =   [ ' __ all __ ' ]   class   MyAdvancedSearchView ( AdvancedSearchView ) :   pagination _ class   =   MyPagination   renderer _ classes   =   [ CodeMsgResultJsonRenderer ]   auto _ generate _ serializer _ class   =   True   filter _ fields   =   [ ' __ all __ ' ]","title":"\u81ea\u5b9a\u4e49 \u98ce\u683c"},{"location":"________ad1/","text":"\u5e7f\u544a \u5e7f\u544a\u4f4d \u51fa\u79df 1   \u70b9 \u4e86 \u8fd9\u4e2a \u540e ,   readthedocs   \u5de6\u4e0b \u4e0b\u89d2 \u5de6\u4e0b\u89d2 \u53ef\u80fd \u4f1a \u81ea\u52a8 \u8df3\u51fa \u5e7f\u544a ...   \u90a3 \u7b49 \u6211 \u4ee5\u540e \u63a5\u5355 \u4e86 \u4e5f \u653e\u4e2a \u5e7f\u544a \u5728 \u8fd9\u91cc .","title":"\u5e7f\u544a\u4f4d \u51fa\u79df 1"},{"location":"________ad1/#1","text":"\u70b9 \u4e86 \u8fd9\u4e2a \u540e ,   readthedocs   \u5de6\u4e0b \u4e0b\u89d2 \u5de6\u4e0b\u89d2 \u53ef\u80fd \u4f1a \u81ea\u52a8 \u8df3\u51fa \u5e7f\u544a ...   \u90a3 \u7b49 \u6211 \u4ee5\u540e \u63a5\u5355 \u4e86 \u4e5f \u653e\u4e2a \u5e7f\u544a \u5728 \u8fd9\u91cc .","title":"\u5e7f\u544a\u4f4d \u51fa\u79df 1"},{"location":"________ad2/","text":"\u5e7f\u544a \u5e7f\u544a\u4f4d \u51fa\u79df 2   \u70b9 \u4e86 \u8fd9\u4e2a \u540e ,   readthedocs   \u5de6\u4e0b \u4e0b\u89d2 \u5de6\u4e0b\u89d2 \u53ef\u80fd \u4f1a \u81ea\u52a8 \u8df3\u51fa \u5e7f\u544a ...   \u90a3 \u7b49 \u6211 \u4ee5\u540e \u63a5\u5355 \u4e86 \u4e5f \u653e\u4e2a \u5e7f\u544a \u5728 \u8fd9\u91cc .","title":"\u5e7f\u544a\u4f4d \u51fa\u79df 2"},{"location":"________ad2/#2","text":"\u70b9 \u4e86 \u8fd9\u4e2a \u540e ,   readthedocs   \u5de6\u4e0b \u4e0b\u89d2 \u5de6\u4e0b\u89d2 \u53ef\u80fd \u4f1a \u81ea\u52a8 \u8df3\u51fa \u5e7f\u544a ...   \u90a3 \u7b49 \u6211 \u4ee5\u540e \u63a5\u5355 \u4e86 \u4e5f \u653e\u4e2a \u5e7f\u544a \u5728 \u8fd9\u91cc .","title":"\u5e7f\u544a\u4f4d \u51fa\u79df 2"},{"location":"about/","text":"\u5173\u4e8e   document _ version :   1.1   \u76f8\u5173 \u94fe\u63a5   Git \u4ed3\u5e93   wiki \u6587\u6863   pypi \u5730\u5740","title":"\u5173\u4e8e"},{"location":"about/#_1","text":"document _ version :   1.1","title":"\u5173\u4e8e"},{"location":"about/#_2","text":"Git \u4ed3\u5e93   wiki \u6587\u6863   pypi \u5730\u5740","title":"\u76f8\u5173 \u94fe\u63a5"},{"location":"advertisement/","text":"\u5e7f\u544a \u5e7f\u544a\u4f4d \u51fa\u79df   \u70b9 \u4e86 \u8fd9\u4e2a \u540e ,   readthedocs   \u4f1a \u81ea\u52a8 \u8df3\u51fa \u5e7f\u544a ...   \u90a3 \u7b49 \u6211 \u4ee5\u540e \u63a5\u5355 \u4e86 \u4e5f \u653e\u4e2a \u5e7f\u544a \u5728 \u8fd9\u91cc .","title":"\u5e7f\u544a\u4f4d \u51fa\u79df"},{"location":"advertisement/#_1","text":"\u70b9 \u4e86 \u8fd9\u4e2a \u540e ,   readthedocs   \u4f1a \u81ea\u52a8 \u8df3\u51fa \u5e7f\u544a ...   \u90a3 \u7b49 \u6211 \u4ee5\u540e \u63a5\u5355 \u4e86 \u4e5f \u653e\u4e2a \u5e7f\u544a \u5728 \u8fd9\u91cc .","title":"\u5e7f\u544a\u4f4d \u51fa\u79df"}]}